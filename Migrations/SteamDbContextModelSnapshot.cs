// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteamProject.Database;

#nullable disable

namespace SteamProject.Migrations
{
    [DbContext(typeof(SteamDbContext))]
    partial class SteamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SteamProject.Models.AppReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("Comment_Count")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden_In_Steam_China")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Recieved_For_Free")
                        .HasColumnType("bit");

                    b.Property<string>("RecommendationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SteamAppId")
                        .HasColumnType("int");

                    b.Property<string>("Steam_China_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Steam_Purchase")
                        .HasColumnType("bit");

                    b.Property<int>("Timestamp_Created")
                        .HasColumnType("int");

                    b.Property<int>("Timestamp_Updated")
                        .HasColumnType("int");

                    b.Property<bool>("Voted_Up")
                        .HasColumnType("bit");

                    b.Property<int>("Votes_Funny")
                        .HasColumnType("int");

                    b.Property<int>("Votes_Up")
                        .HasColumnType("int");

                    b.Property<double>("Weighted_Vote_Score")
                        .HasColumnType("float");

                    b.Property<bool>("Written_During_Early_Access")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SteamAppId");

                    b.ToTable("AppReview");
                });

            modelBuilder.Entity("SteamProject.Models.ReviewAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Last_Played")
                        .HasColumnType("int");

                    b.Property<int>("Num_Games_Owned")
                        .HasColumnType("int");

                    b.Property<int>("Num_Reviews")
                        .HasColumnType("int");

                    b.Property<int>("Playtime_At_Review")
                        .HasColumnType("int");

                    b.Property<int>("Playtime_Forever")
                        .HasColumnType("int");

                    b.Property<int>("Playtime_Last_Two_Weeks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReviewAuthor");
                });

            modelBuilder.Entity("SteamProject.Models.ReviewSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Review_Score")
                        .HasColumnType("float");

                    b.Property<string>("Review_Score_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SteamAppId")
                        .HasColumnType("int");

                    b.Property<int>("Total_Negative")
                        .HasColumnType("int");

                    b.Property<int>("Total_Positive")
                        .HasColumnType("int");

                    b.Property<int>("Total_Reviews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SteamAppId")
                        .IsUnique();

                    b.ToTable("ReviewSummary");
                });

            modelBuilder.Entity("SteamProject.Models.SteamApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SteamProject.Models.AppReview", b =>
                {
                    b.HasOne("SteamProject.Models.ReviewAuthor", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("SteamProject.Models.SteamApp", null)
                        .WithMany("Reviews")
                        .HasForeignKey("SteamAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SteamProject.Models.ReviewSummary", b =>
                {
                    b.HasOne("SteamProject.Models.SteamApp", null)
                        .WithOne("ReviewSummary")
                        .HasForeignKey("SteamProject.Models.ReviewSummary", "SteamAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SteamProject.Models.SteamApp", b =>
                {
                    b.Navigation("ReviewSummary")
                        .IsRequired();

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
